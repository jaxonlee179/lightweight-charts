import React from 'react';
import Layout from '@theme/Layout';
import useThemeContext from '@theme/hooks/useThemeContext';

import { createChart } from 'lightweight-charts';

import styles from './index.module.css';

const data = { orangeData: [{ value: 33, time: 1628005368 }, { value: 33.49774076716826, time: 1628610168 }, { value: 33.00544183567645, time: 1629214968 }, { value: 33.7026637942526, time: 1629819768 }, { value: 33.21936886405405, time: 1630424568 }, { value: 33.900609590144896, time: 1631029368 }, { value: 33.17765657755362, time: 1631634168 }, { value: 33.42924174402081, time: 1632238968 }, { value: 33.11836183231501, time: 1632843768 }, { value: 33.370546260351574, time: 1633448568 }, { value: 32.37624709371832, time: 1634053368 }, { value: 32.51457619610796, time: 1634658168 }, { value: 32.289844763651196, time: 1635262968 }, { value: 32.30345180071158, time: 1635867768 }, { value: 31.338699866068282, time: 1636472568 }, { value: 31.599431171640674, time: 1637077368 }, { value: 31.19599059792039, time: 1637682168 }, { value: 31.425624659001333, time: 1638286968 }, { value: 30.687366192207392, time: 1638891768 }, { value: 31.37955209658077, time: 1639496568 }, { value: 30.44272814637675, time: 1640101368 }, { value: 30.443425326447485, time: 1640706168 }, { value: 30.402280371726427, time: 1641310968 }, { value: 31.323860910479432, time: 1641915768 }], blueData: [{ value: 31, time: 1628005368 }, { value: 31.78679751621187, time: 1628610168 }, { value: 31.73307428969506, time: 1629214968 }, { value: 32.645659569228435, time: 1629819768 }, { value: 32.18589215966293, time: 1630424568 }, { value: 32.36649658122607, time: 1631029368 }, { value: 32.13494929971301, time: 1631634168 }, { value: 32.24176261787218, time: 1632238968 }, { value: 32.23416002963385, time: 1632843768 }, { value: 33.155464487194166, time: 1633448568 }, { value: 32.30858974959849, time: 1634053368 }, { value: 33.240351713622175, time: 1634658168 }, { value: 32.476820033756304, time: 1635262968 }, { value: 33.38322664774607, time: 1635867768 }, { value: 33.112040840762795, time: 1636472568 }, { value: 33.21270434841732, time: 1637077368 }, { value: 32.34952853888793, time: 1637682168 }, { value: 33.309373031504336, time: 1638286968 }, { value: 32.68788509068168, time: 1638891768 }, { value: 32.991148534675084, time: 1639496568 }, { value: 32.019560141931144, time: 1640101368 }, { value: 32.6775781486036, time: 1640706168 }, { value: 31.739487272423506, time: 1641310968 }, { value: 31.957098637385883, time: 1641915768 }] };

function HeroChart(props) {
	const ref = React.useRef();

	const { isDarkTheme } = useThemeContext();

	const [chart, setChart] = React.useState(null);

	React.useLayoutEffect(() => {
		const container = ref.current;

		const layout = isDarkTheme
			? { background: { color: '#000000' }, textColor: '#FFFFFF' }
			: { background: { color: '#FFFFFF' }, textColor: '#000000' };

		const c = createChart(container, {
			grid: {
				horzLines: false,
				vertLines: false,
			},
			layout,
			timeScale: {
				fixLeftEdge: true,
				fixRightEdge: true,
			},
		});

		const orangeSeries = c.addAreaSeries({
			lineColor: '#FFE902',
			topColor: 'rgba(251, 140, 0, 0.6)',
			bottomColor: 'rgba(251, 140, 0, 0.2)',
		});
		const blueSeries = c.addAreaSeries({
			lineColor: 'rgba(15, 28, 249, 1)',
			topColor: 'rgba(15, 28, 249, 1)',
			bottomColor: 'rgba(15, 28, 249, 0.2)',
		});

		orangeSeries.setData(data.orangeData);
		blueSeries.setData(data.blueData);

		c.timeScale().fitContent();

		const resizeListener = () => {
			const { width, height } = container.getBoundingClientRect();
			c.resize(width, height);
			c.timeScale().fitContent();
		};

		setChart(c);

		// eslint-disable-next-line no-undef
		window.addEventListener('resize', resizeListener);

		return () => {
			// eslint-disable-next-line no-undef
			window.removeEventListener('resize', resizeListener);
			c.remove();
			setChart(null);
		};
	}, []);

	React.useLayoutEffect(() => {
		if (!chart) {
			return;
		}

		const layout = isDarkTheme
			? { background: { color: '#000000' }, textColor: '#FFFFFF' }
			: { background: { color: '#FFFFFF' }, textColor: '#000000' };

		chart.applyOptions({ layout });
	}, [isDarkTheme]);

	return (
		<div className={styles.HeroChartContainer} ref={ref}></div>
	);
}

function Index() {
	return (
		<Layout title="Lightweight Charts">
			<div className={styles.HeroContainer}>
				<HeroChart />
				<div className={styles.HeroTextContainer}>
					<svg width="91" height="55" viewBox="0 0 91 55" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd" d="M86.5096 9.17833C87.8483 6.37042 89.1087 3.31636 90.2664 0L87.4861 0.788084C86.4704 3.54527 85.3838 6.10206 84.2428 8.47031C75.4834 13.8751 64.9901 12.8237 57.3572 8.60601L55.6002 7.54733C55.3234 8.93097 55.5748 10.4745 55.6928 11.199L55.7131 11.324C55.8231 12.0128 56.0023 12.8068 56.227 13.6432C56.4596 14.5093 56.7456 15.4382 57.0648 16.3667C56.299 15.8335 55.5494 15.0829 54.8593 14.1224C53.519 12.2572 52.4895 9.70967 52.0826 6.8229L51.9826 6.1134L51.3061 5.87718C33.6184 -0.299498 10.7551 6.4745 0.466449 24.1489L0.193848 24.6172L0.37285 25.1286C4.30395 36.3603 13.5495 46.4481 24.7847 51.2231L25.0051 51.3167L25.2469 51.3167L25.2498 51.3167L25.2576 51.3167L25.2807 51.3164L25.3136 51.3159L25.3564 51.3148C25.4197 51.313 25.5086 51.3096 25.6219 51.303C25.8483 51.2899 26.172 51.2643 26.5821 51.2142C27.4022 51.1139 28.5686 50.9157 29.9946 50.5236C32.2974 49.8903 35.2744 48.7519 38.5583 46.7077C38.3616 47.2602 38.1137 47.8358 37.8197 48.412C37.0137 49.9918 35.6163 51.9233 32.8479 53.8152L35.4041 54.3005C46.55 56.4168 59.6537 53.1714 69.7962 45.4072C79.9608 37.626 87.191 25.2739 86.5096 9.17833ZM82.3598 12.1248C74.2296 15.7745 65.2539 14.9207 58.1637 11.6473C58.2519 12.0705 58.3642 12.5369 58.4975 13.0334C58.9197 14.6051 59.5347 16.4146 60.1978 18.006L60.9929 19.9142C58.2451 19.8903 54.5224 17.6827 52.95 15.4943C51.4837 13.4537 50.385 10.8073 49.8689 7.8728C33.397 2.47969 12.4459 8.81566 2.77533 24.864C4.39063 29.2717 6.87524 33.4876 9.99585 37.221L29.9334 22.0187C29.435 21.1282 29.1509 20.1016 29.1509 19.0087C29.1509 15.6003 31.914 12.8372 35.3224 12.8372C38.7308 12.8372 41.4939 15.6003 41.4939 19.0087C41.4939 20.209 41.1512 21.3294 40.5583 22.2771L49.2468 30.9656C50.3394 29.9847 51.784 29.3881 53.3679 29.3881C56.2767 29.3881 58.7155 31.4004 59.368 34.1089C66.267 31.6824 75.1439 25.2262 82.3598 12.1248ZM59.4588 36.5594C67.0127 34.1292 76.5012 27.3688 84.1337 13.7696C83.406 26.8349 77.0142 36.9209 68.3671 43.5404C59.3893 50.413 48.0149 53.5211 38.0791 52.3353C38.7802 51.4673 39.4041 50.4797 39.9139 49.4805C40.8103 47.7236 41.4421 45.7576 41.4421 44.1324L41.4421 41.8126L39.5714 43.1844C35.6025 46.095 31.9802 47.5392 29.3712 48.2567C28.0658 48.6156 27.0131 48.7929 26.2969 48.8805C25.9388 48.9243 25.665 48.9456 25.486 48.9559L25.466 48.9571C20.2488 46.6967 15.4829 43.2134 11.5547 38.9889L31.4528 23.8166C32.5113 24.6696 33.8572 25.1802 35.3224 25.1802C36.6802 25.1802 37.9357 24.7416 38.9548 23.9985L47.8165 32.8602C47.4193 33.6756 47.1964 34.5915 47.1964 35.5595C47.1964 38.968 49.9595 41.731 53.3679 41.731C56.4359 41.731 58.981 39.4923 59.4588 36.5594ZM39.1428 19.0087C39.1428 21.1186 37.4324 22.8291 35.3224 22.8291C33.2124 22.8291 31.5019 21.1186 31.5019 19.0087C31.5019 16.8987 33.2124 15.1882 35.3224 15.1882C37.4324 15.1882 39.1428 16.8987 39.1428 19.0087ZM53.3679 39.38C55.3008 39.38 57.0708 37.7789 57.0708 35.5595C57.0708 33.3402 55.3008 31.7391 53.3679 31.7391C51.435 31.7391 49.665 33.3402 49.665 35.5595C49.665 37.7789 51.435 39.38 53.3679 39.38Z" fill="white" />
					</svg>

					<h1>Lightweight Charts</h1>
					<p>Free, open-source and feature-rich. At just 40 kilobytes, the dream of lightweight interactive charts is now a reality.</p>

					<p><a className={styles.HeroButtonPrimary} href="docs">Get Started</a> <a className={styles.HeroButton} href="docs/api">API Reference</a></p>
				</div>
			</div>
			<div className={styles.LargeCardContainer}>
				<div className={styles.LargeCard}>
					<svg width="109" height="109" viewBox="0 0 118 119" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd" d="M70.8327 54.1641L56.3175 96.4331C53.3476 108.832 42.1908 118.049 28.8813 118.049C13.3006 118.049 0.669922 105.418 0.669922 89.8375C0.669922 76.9691 9.28584 66.113 21.0637 62.7233L64.5385 47.8612L75.965 14.5868C78.9617 5.86012 87.1701 0 96.397 0C108.328 0 118 9.67209 118 21.6032V22.181C118 31.666 111.969 40.1013 102.994 43.1695L70.8327 54.1641ZM28.8813 110.049C38.5011 110.049 46.5512 103.328 48.5925 94.326L48.5836 94.3229L48.6114 94.2419C48.9265 92.8241 49.0927 91.3502 49.0927 89.8375C49.0927 78.6751 40.0437 69.6261 28.8813 69.6261C26.9874 69.6261 25.1544 69.8866 23.4161 70.3737L21.6541 70.9761L21.6482 70.9589C14.0583 73.8686 8.66992 81.2238 8.66992 89.8375C8.66992 101 17.7189 110.049 28.8813 110.049ZM41.01 64.3591C46.8178 67.1288 51.5297 71.8258 54.3184 77.6227L61.2491 57.4403L41.01 64.3591ZM74.1221 44.585L100.406 35.5996C106.144 33.638 110 28.245 110 22.181V21.6032C110 14.0904 103.91 8 96.397 8C90.587 8 85.4183 11.69 83.5313 17.1851L74.1221 44.585ZM96.0002 28C99.3139 28 102 25.3137 102 22C102 18.6863 99.3139 16 96.0002 16C92.6865 16 90.0002 18.6863 90.0002 22C90.0002 25.3137 92.6865 28 96.0002 28Z" fill="#D1D4DC" />
					</svg>
					<h2>High Performance</h2>
					<p>Our charting solutions were engineered from the start to work with huge data arrays. Charts stay responsive and nimble even with thousands of bars even with updates multiple times per second with new ticks.</p>
				</div>
				<div className={styles.LargeCard}>
					<svg width="109" height="109" viewBox="0 0 106 106" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd" d="M75.7962 13.0971C70.0216 15.8826 63.5978 19.9079 56.9532 24.9887C61.2963 28.1978 65.6525 31.9448 69.8527 36.145C74.0528 40.3451 77.7997 44.7011 81.0087 49.0441C86.0894 42.3995 90.1148 35.9757 92.9003 30.2012C95.4643 24.8858 96.8775 20.3261 97.217 16.7733C97.5597 13.1865 96.7739 11.242 95.7646 10.2328C94.7553 9.22348 92.8108 8.43762 89.2241 8.78035C85.6713 9.11983 81.1116 10.5331 75.7962 13.0971ZM72.3204 5.8916C65.3658 9.24638 57.7286 14.1445 49.9725 20.2844C46.7659 18.3327 43.6178 16.7085 40.5992 15.4476C35.9998 13.5263 31.5087 12.3672 27.4598 12.3077C23.3937 12.2479 19.4298 13.3091 16.5127 16.2261C13.5957 19.1432 12.5345 23.1071 12.5943 27.1732C12.6538 31.2221 13.8129 35.7132 15.7342 40.3126C16.9951 43.3312 18.6193 46.4793 20.5709 49.6859C14.4308 57.4422 9.53259 65.0795 6.17774 72.0343C3.38875 77.816 1.56568 83.3323 1.10275 88.177C0.643068 92.9877 1.48872 97.762 4.86204 101.135C8.23536 104.509 13.0097 105.354 17.8204 104.895C22.665 104.432 28.1813 102.609 33.9631 99.8196C40.9179 96.4648 48.5551 91.5665 56.3114 85.4265C59.5181 87.3783 62.6664 89.0025 65.6851 90.2635C70.2845 92.1848 74.7756 93.3439 78.8245 93.4034C82.8906 93.4632 86.8545 92.402 89.7716 89.485C92.6886 86.5679 93.7498 82.604 93.69 78.5379C93.6305 74.489 92.4714 69.9979 90.5501 65.3985C89.2891 62.3798 87.6649 59.2315 85.7131 56.0247C91.8529 48.2686 96.751 40.6316 100.106 33.6769C102.895 27.8952 104.718 22.3789 105.181 17.5342C105.64 12.7235 104.795 7.94922 101.421 4.5759C98.0481 1.20258 93.2738 0.356939 88.4631 0.81662C83.6185 1.27954 78.1021 3.10262 72.3204 5.8916ZM23.116 37.229C23.9084 39.1259 24.8788 41.1088 26.0181 43.1503C28.6582 40.1355 31.4722 37.1266 34.4425 34.1564C37.4129 31.1859 40.422 28.3718 43.4369 25.7315C41.3954 24.5922 39.4125 23.6218 37.5156 22.8294C33.486 21.1461 30.0357 20.3464 27.3421 20.3068C24.6657 20.2675 23.086 20.9666 22.1696 21.883C21.2532 22.7994 20.5541 24.3791 20.5934 27.0555C20.633 29.7491 21.4327 33.1994 23.116 37.229ZM40.0994 39.8132C36.6483 43.2643 33.4354 46.7516 30.4856 50.2168C33.6728 54.7403 37.5692 59.39 42.0884 63.9093C46.6076 68.4284 51.2571 72.3247 55.7805 75.5118C59.2457 72.562 62.733 69.3491 66.1841 65.898C69.6354 62.4467 72.8485 58.9593 75.7983 55.4938C72.6112 50.9705 68.715 46.321 64.1959 41.8018C59.6766 37.2826 55.0269 33.3862 50.5034 30.1991C47.038 33.1489 43.5506 36.362 40.0994 39.8132ZM13.3832 75.51C16.1688 69.7354 20.1943 63.3113 25.2753 56.6665C28.4844 61.0097 32.2314 65.3659 36.4316 69.5661C40.6317 73.7662 44.9878 77.5131 49.3308 80.7221C42.686 85.8031 36.262 89.8285 30.4873 92.6141C25.1719 95.1782 20.6122 96.5914 17.0594 96.9309C13.4727 97.2736 11.5282 96.4877 10.5189 95.4785C9.50961 94.4692 8.72376 92.5247 9.06648 88.9379C9.40596 85.3851 10.8192 80.8254 13.3832 75.51ZM68.7687 82.8817C66.8716 82.0892 64.8886 81.1187 62.847 79.9794C65.8617 77.3392 68.8707 74.5251 71.841 71.5548C74.8114 68.5844 77.6256 65.5753 80.2659 62.5603C81.4053 64.602 82.3758 66.585 83.1683 68.4821C84.8516 72.5117 85.6513 75.962 85.6909 78.6556C85.7302 81.332 85.0311 82.9117 84.1147 83.8281C83.1983 84.7445 81.6186 85.4436 78.9422 85.4043C76.2486 85.3647 72.7983 84.565 68.7687 82.8817ZM52.9998 58.0002C56.3135 58.0002 58.9998 55.3139 58.9998 52.0002C58.9998 48.6865 56.3135 46.0002 52.9998 46.0002C49.6861 46.0002 46.9998 48.6865 46.9998 52.0002C46.9998 55.3139 49.6861 58.0002 52.9998 58.0002Z" fill="#D1D4DC" />
					</svg>

					<h2>Interactive, responsive and mobile-friendly</h2>
					<p>Intelligently adapts to any device. Charts are carefully engineered for best interactivity, both for powerful desktops with a mouse, and touch-optimized for tablets and phones.</p>
				</div>
				<div className={styles.LargeCard}>
					<svg width="109" height="109" viewBox="0 0 109 103" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path fillRule="evenodd" clipRule="evenodd" d="M106.264 5.26178L105.729 2.69786L103.165 2.16297L99.4251 1.38267C83.2464 -1.99254 66.4563 3.01536 54.7699 14.7017L42.8905 26.5811C35.4601 21.1684 24.9906 21.8145 18.2856 28.5194L5.54239 41.2627L11.1992 46.9195L23.9425 34.1763C27.51 30.6088 32.9182 30.004 37.1098 32.3618L13.1021 56.3696L10.2737 59.198L13.1021 62.0264L19.2038 68.1281C18.9176 68.2502 18.636 68.3824 18.3592 68.524C14.0735 70.7165 10.9241 75.1614 8.68531 79.3034C6.36693 83.5925 4.64219 88.2915 3.50691 91.8481C2.93454 93.6413 2.50172 95.1768 2.21059 96.2698C2.06487 96.8169 1.95423 97.2547 1.87897 97.5603C1.84133 97.7131 1.81251 97.833 1.79255 97.9171L1.76924 98.0161L1.76257 98.0448L1.76048 98.0539L1.75975 98.057C1.75947 98.0583 1.75922 98.0593 5.65814 98.9529L1.75922 98.0593L0.637695 102.953H5.65814C13.2865 102.953 24.5567 100.32 31.9881 95.5202C34.8447 93.6753 37.6141 91.1968 39.0838 88.0081L46.4008 95.3251L49.2292 98.1535L52.0576 95.3251L76.0653 71.3175C78.4228 75.509 77.8178 80.917 74.2505 84.4843L61.5072 97.2276L67.1641 102.884L79.9074 90.1411C86.6122 83.4363 87.2584 72.9672 81.846 65.5367L93.7255 53.6573C105.412 41.9709 110.42 25.1808 107.045 9.00208L106.264 5.26178ZM34.2303 71.8409C34.7801 72.3489 35.2964 72.8647 35.7772 73.3878L49.2292 86.8398L88.0686 48.0004C97.847 38.222 102.037 24.1732 99.2131 10.6359L98.9677 9.45948L97.7913 9.21406C84.254 6.38991 70.2052 10.5802 60.4268 20.3586L21.5874 59.198L34.2303 71.8409ZM28.458 77.4062C28.5374 77.4766 28.6153 77.5465 28.6915 77.6159L29.7514 78.6758L30.058 78.9823C32.1283 81.2913 32.2673 82.8538 32.116 83.7235C31.8831 85.0622 30.6461 86.8635 27.6478 88.8C23.2387 91.6475 16.7264 93.6693 11.0541 94.5137C11.0784 94.4367 11.1031 94.359 11.1281 94.2808C12.19 90.9539 13.7383 86.7792 15.723 83.1074C17.7872 79.2885 19.971 76.6855 22.0028 75.6461C22.8995 75.1873 23.7179 75.0559 24.5781 75.2104C25.491 75.3744 26.7855 75.924 28.458 77.4062ZM76.9997 36C80.3134 36 82.9997 33.3137 82.9997 30C82.9997 26.6863 80.3134 24 76.9997 24C73.686 24 70.9997 26.6863 70.9997 30C70.9997 33.3137 73.686 36 76.9997 36Z" fill="#D1D4DC" />
					</svg>
					<h2>Finance is at the heart</h2>
					<p>Charting is our core. TradingView charts are used by tens of thousands of websites, apps and financial portals, as well as millions of traders around the world. You can be sure that we’ve included everything you need, starting from popular chart types to advanced price scaling.</p>
				</div>
			</div>
			<div className={styles.SmallCardContainer}>
				<div className={styles.SmallCard}>
					<svg width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M20 8.31442L5.45908 22L20 35.6856V8.31442Z" stroke="#2962FF" strokeWidth="2" strokeLinejoin="round" />
						<path d="M38.9998 8.27115L24.0025 22L38.9998 35.7288V8.27115Z" stroke="#2962FF" strokeWidth="2" strokeLinejoin="round" />
					</svg>

					<h3>Ultra lightweight - just 40 Kb</h3>
					<p>HTML5 Canvas technology no larger than a standard GIF file.</p>
				</div>
				<div className={styles.SmallCard}>
					<svg width="45" height="44" viewBox="0 0 45 44" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M12.25 4V20M4.25 12H20.25" stroke="#2962FF" strokeWidth="2" />
						<path d="M18.6597 24.3501L4.99316 38.0166M4.99316 24.3501L18.6597 38.0166" stroke="#2962FF" strokeWidth="2" />
						<path d="M38.9644 24.1499L25.3354 37.7789" stroke="#2962FF" strokeWidth="2" />
						<path d="M25.25 12H40.25" stroke="#2962FF" strokeWidth="2" />
					</svg>

					<h3>Integrating & connecting any data is quick and easy</h3>
					<p>Built for developers, by developers. Charts are rich in features and easy to integrate — so you can integrate with a breeze.</p>
				</div>
				<div className={styles.SmallCard}>
					<svg width="45" height="44" viewBox="0 0 45 44" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M3.5 7.3687C3.5 6.7557 4.05801 6.27373 4.68415 6.37344C18.1344 8.51544 26.7079 8.51006 40.3184 6.36804C40.9435 6.26967 41.5 6.75115 41.5 7.3632V34.6386C41.5 35.2505 40.944 35.7317 40.3195 35.6338C26.7824 33.5116 18.2242 33.4805 4.6837 35.6281C4.05764 35.7274 3.5 35.2454 3.5 34.6328V7.3687Z" stroke="#2962FF" strokeWidth="2" />
						<path d="M3.06055 21H42.1267" stroke="#2962FF" strokeWidth="2" />
						<path d="M22.5 7.63452L22.5 38.6458" stroke="#2962FF" strokeWidth="2" />
						<path d="M17.5 39H27.5" stroke="#2962FF" strokeWidth="2" />
						<path d="M13.5 7.12451V34.4775" stroke="#2962FF" strokeWidth="2" />
						<path d="M31.5 7.12451V34.4775" stroke="#2962FF" strokeWidth="2" />
					</svg>

					<h3>Open-source </h3>
					<p>Fully customizable & free charts that don’t contain hidden ads. Contributions are welcome!</p>
				</div>
				<div className={styles.SmallCard}>
					<svg width="45" height="44" viewBox="0 0 45 44" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M12.75 4V20M4.75 12H20.75" stroke="#2962FF" strokeWidth="2" />
						<path d="M19.1597 24.3501L5.49316 38.0166M5.49316 24.3501L19.1597 38.0166" stroke="#2962FF" strokeWidth="2" />
						<path d="M39.4644 24.1499L25.8354 37.7789" stroke="#2962FF" strokeWidth="2" />
						<path d="M25.75 12H40.75" stroke="#2962FF" strokeWidth="2" />
					</svg>

					<h3>Flexible styling</h3>
					<p>Change the standard look & feel to match your style with perfection. There are many premade examples that you can copy & paste.</p>
				</div>
			</div>
			<div className={styles.LargeTextContainer}>
				<h1>Fully customizable & free charts that don’t contain hidden ads</h1>
				<p>Millions of websites still use static pictures for showing financial charts. The old way is not interactive and doesn’t scale with various devices. Pictures always had a huge advantage of their small size and fast loading — but no more!</p>
			</div>
		</Layout>
	);
}

// eslint-disable-next-line import/no-default-export
export default Index;
